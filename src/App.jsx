import { useState, useEffect } from 'react';

function App() {
  const [toastMessage, setToastMessage] = useState("");
  const [banners, setBanners] = useState([
    { image: "https://via.placeholder.com/400x150?text=üî•+–ü—Ä–æ–¥—É–∫—Ç+–¥–Ω—è", label: "üî• –ü—Ä–æ–¥—É–∫—Ç –¥–Ω—è", tag: "–•–ò–¢" },
    { image: "https://via.placeholder.com/400x150?text=üéÅ+–ë–æ–Ω—É—Å+–∑–∞+Stories", label: "üéÅ –ë–æ–Ω—É—Å –∑–∞ Stories", tag: "–ê–ö–¶–ò–Ø" },
    { image: "https://via.placeholder.com/400x150?text=üèÜ+–ß–µ–ª–ª–µ–Ω–¥–∂", label: "üèÜ –ß–µ–ª–ª–µ–Ω–¥–∂ –¥–ª—è –≥–µ—Ä–æ–µ–≤", tag: "–ß–ï–õ–õ–ï–ù–î–ñ" },
  ]);
  const [isSubscribed, setIsSubscribed] = useState(false);
  const [cart, setCart] = useState({});
  const [navTab, setNavTab] = useState("–ì–ª–∞–≤–Ω–∞—è");
  const [paymentMethod, setPaymentMethod] = useState("Click");
  const [votes, setVotes] = useState({});
  const [heroProgress, setHeroProgress] = useState(0);

  const merchItems = [
    { id: 1, name: "–§—É—Ç–±–æ–ª–∫–∞ Hubchik", image: "https://via.placeholder.com/100x100?text=–§—É—Ç–±–æ–ª–∫–∞", price: "149000" },
    { id: 2, name: "–ö–µ–ø–∫–∞ Hubchik", image: "https://via.placeholder.com/100x100?text=–ö–µ–ø–∫–∞", price: "89000" },
    { id: 3, name: "–¢–µ—Ä–º–æ–∫—Ä—É–∂–∫–∞ Hubchik", image: "https://via.placeholder.com/100x100?text=–ö—Ä—É–∂–∫–∞", price: "109000" },
  ];

  const votingData = [
    {
      question: "–ö–∞–∫–æ–µ –±–ª—é–¥–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –º–µ–Ω—é?",
      options: ["–ö–∏–º—á–∏ –ª–∞–≤–∞—à", "–°—ã—Ä–Ω—ã–π –±–∞—Å–∫–µ—Ç", "–û—Å—Ç—Ä—ã–µ –∫—Ä—ã–ª—å—è"]
    },
    {
      question: "–ß—Ç–æ –Ω–∞–ø–µ—á–∞—Ç–∞—Ç—å –Ω–∞ —Å—Ç–∞–∫–∞–Ω–∞—Ö?",
      options: ["#hubchikpower", "–ü–∏—Ç–∞–π—Å—è –∫–∞–∫ –±–æ—Å—Å", "–ë–µ—Ä–∏ –±–æ–ª—å—à–µ"]
    }
  ];

  useEffect(() => {
    const count = Object.values(cart).reduce((acc, qty) => acc + qty, 0);
    setHeroProgress(Math.min(100, count * 10));
  }, [cart]);

  const handleVote = (qIdx, option) => {
    setVotes((prev) => ({ ...prev, [qIdx]: option }));
    setToastMessage("–í–∞—à –≥–æ–ª–æ—Å —É—á—Ç—ë–Ω üôå");
    setTimeout(() => setToastMessage(""), 2500);
  };

  const addToCart = (id) => {
    setCart((prev) => ({ ...prev, [id]: (prev[id] || 0) + 1 }));
    setToastMessage("–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É! üõí");
  };

  const removeFromCart = (id) => {
    setCart((prev) => {
      const updated = { ...prev };
      if (updated[id] > 1) updated[id] -= 1;
      else delete updated[id];
      return updated;
    });
  };

  const cartItems = merchItems.filter((item) => cart[item.id]);
  const totalPrice = cartItems.reduce((acc, item) => acc + cart[item.id] * parseInt(item.price), 0);

  return (
    <div className="pb-24 font-sans bg-white min-h-screen">
      {navTab === "–ì–ª–∞–≤–Ω–∞—è" && (
        <div className="p-4 space-y-4">
          {banners.map((banner, idx) => (
            <div key={idx} className="rounded-xl overflow-hidden shadow">
              <img src={banner.image} alt="banner" className="w-full h-32 object-cover" />
            </div>
          ))}

          <h2 className="text-xl font-semibold text-[#2c924d] mt-4 flex items-center gap-2">
            üéÅ <span>–ú–µ—Ä—á Hubchik</span>
          </h2>
          {merchItems.map((item) => (
            <div key={item.id} className="border rounded-xl p-3 flex items-center gap-4 shadow-sm">
              <img src={item.image} alt={item.name} className="w-16 h-16 rounded object-cover" />
              <div className="flex-1">
                <div className="font-medium text-[#ec6839]">{item.name}</div>
                <div className="text-sm text-gray-600">{parseInt(item.price).toLocaleString()} —Å—É–º</div>
              </div>
              <button
                onClick={() => addToCart(item.id)}
                className="px-3 py-1 text-sm bg-[#2c924d] text-white rounded-xl hover:bg-green-700"
              >
                –í –∫–æ—Ä–∑–∏–Ω—É
              </button>
            </div>
          ))}
        </div>
      )}
    </div>
  );
}

export default App;
