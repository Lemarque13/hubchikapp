import { useState } from 'react';

function App() {
  const [toastMessage, setToastMessage] = useState("");
  const [banners, setBanners] = useState([
    { image: "/images/banner1.jpg", label: "üî• –ü—Ä–æ–¥—É–∫—Ç –¥–Ω—è", tag: "–•–ò–¢" },
    { image: "/images/banner2.jpg", label: "üéÅ –ë–æ–Ω—É—Å –∑–∞ Stories", tag: "–ê–ö–¶–ò–Ø" },
    { image: "/images/banner3.jpg", label: "üèÜ –ß–µ–ª–ª–µ–Ω–¥–∂ –¥–ª—è –≥–µ—Ä–æ–µ–≤", tag: "–ß–ï–õ–õ–ï–ù–î–ñ" },
  ]);
  const [isSubscribed, setIsSubscribed] = useState(false);
  const [cart, setCart] = useState({});
  const [navTab, setNavTab] = useState("–ì–ª–∞–≤–Ω–∞—è");
  const [paymentMethod, setPaymentMethod] = useState("Click");
  const [votes, setVotes] = useState({});

  const votingData = [
    {
      question: "–ö–∞–∫–æ–µ –±–ª—é–¥–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –º–µ–Ω—é?",
      options: ["–ö–∏–º—á–∏ –ª–∞–≤–∞—à", "–°—ã—Ä–Ω—ã–π –±–∞—Å–∫–µ—Ç", "–û—Å—Ç—Ä—ã–µ –∫—Ä—ã–ª—å—è"]
    },
    {
      question: "–ß—Ç–æ –Ω–∞–ø–µ—á–∞—Ç–∞—Ç—å –Ω–∞ —Å—Ç–∞–∫–∞–Ω–∞—Ö?",
      options: ["#hubchikpower", "–ü–∏—Ç–∞–π—Å—è –∫–∞–∫ –±–æ—Å—Å", "–ë–µ—Ä–∏ –±–æ–ª—å—à–µ"]
    }
  ];

  const handleVote = (qIdx, option) => {
    setVotes((prev) => ({ ...prev, [qIdx]: option }));
    setToastMessage("–í–∞—à –≥–æ–ª–æ—Å —É—á—Ç—ë–Ω üôå");
    setTimeout(() => setToastMessage(""), 2500);
  };

  return (
    <div className="p-4 space-y-6">
      <h1 className="text-2xl font-bold text-[#2c924d]">üó≥Ô∏è –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ</h1>

      {votingData.map((vote, qIdx) => (
        <div key={qIdx} className="bg-white shadow rounded-xl p-4 border">
          <h2 className="text-lg font-semibold mb-3 text-[#ec6839]">{vote.question}</h2>
          <div className="flex flex-col gap-2">
            {vote.options.map((opt, oIdx) => (
              <button
                key={oIdx}
                onClick={() => handleVote(qIdx, opt)}
                className={`px-4 py-2 rounded border text-sm transition font-medium ${
                  votes[qIdx] === opt
                    ? 'bg-[#2c924d] text-white border-[#2c924d]'
                    : 'border-gray-300 text-gray-700 hover:bg-gray-100'
                }`}
              >
                {opt}
              </button>
            ))}
          </div>
        </div>
      ))}

      {toastMessage && (
        <div className="fixed bottom-4 left-1/2 -translate-x-1/2 px-4 py-2 bg-[#2c924d] text-white rounded-xl shadow">
          {toastMessage}
        </div>
      )}
    </div>
  );
}

export default App;
